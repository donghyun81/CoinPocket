// Generated by Dagger (https://dagger.dev).
package com.example.coinpocket.presentation.company_info;

import androidx.lifecycle.SavedStateHandle;
import com.example.coinpocket.domain.repository.StockRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CompanyInfoViewModel_Factory implements Factory<CompanyInfoViewModel> {
  private final Provider<SavedStateHandle> savedStateHandleProvider;

  private final Provider<StockRepository> repositoryProvider;

  public CompanyInfoViewModel_Factory(Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<StockRepository> repositoryProvider) {
    this.savedStateHandleProvider = savedStateHandleProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public CompanyInfoViewModel get() {
    return newInstance(savedStateHandleProvider.get(), repositoryProvider.get());
  }

  public static CompanyInfoViewModel_Factory create(
      Provider<SavedStateHandle> savedStateHandleProvider,
      Provider<StockRepository> repositoryProvider) {
    return new CompanyInfoViewModel_Factory(savedStateHandleProvider, repositoryProvider);
  }

  public static CompanyInfoViewModel newInstance(SavedStateHandle savedStateHandle,
      StockRepository repository) {
    return new CompanyInfoViewModel(savedStateHandle, repository);
  }
}
